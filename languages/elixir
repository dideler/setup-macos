#!/usr/bin/env bash -e

source utils.sh && source ~/.bashrc

if [[ "$EXPERIMENTAL" ]]; then
  brew install autoconf    # Build tools
  brew install kerl        # Easy building and installing of Erlang/OTP
  brew install wxwidgets   # GUI toolkit dependency for observer and debugger
  brew install libxslt fop # For building documentation and elixir reference builds

  export KERL_CONFIGURE_OPTIONS="--without-javac --with-ssl=$(brew --prefix openssl@3) --with-odbc=$(brew --prefix unixodbc)"
  export KERL_BUILD_DOCS=yes
  export ERL_AFLAGS="-kernel shell_history enabled"
fi

# Elixir requires that Erlang be installed.
asdf plugin add erlang
asdf plugin add elixir

asdf plugin update erlang
asdf plugin update elixir

if brew --prefix openssl > /dev/null; then
  export ERLANG_OPENSSL_PATH="$(brew --prefix openssl)"
fi

# By default, the binary uses the oldest supported OTP release.
# To install binaries with the latest supported OTP version,
# append `otp-${OTP_MAJOR_VERSION}` to the elixir version.
# E.g. `asdf install elixir 1.5.0-otp-20`
#
# For supported OTP versions by Elixir versions, see
# https://hexdocs.pm/elixir/compatibility-and-deprecations.html#between-elixir-and-erlang-otp

# Disable warning as error for implicit function declaration.
# Prevents Erlang 23.0.{2,3,4} from being compiled.
# https://github.com/asdf-vm/asdf-erlang/issues/164
# export CFLAGS="-O2 -Wno-error=implicit-function-declaration"

asdf install erlang latest
asdf install elixir latest # Note that we want a matching OTP version to the Erlang version
asdf reshim erlang
asdf reshim elixir

latest_erlang=$(asdf latest erlang)
latest_elixir=$(asdf latest elixir)
asdf set --home erlang "$latest_erlang"
asdf set --home elixir "$latest_elixir"

log_info "Installed Erlang $latest_erlang and Elixir $latest_elixir."
log_info "Remember to run 'asdf reshim elixir' after installing Elixir CLI packages."
